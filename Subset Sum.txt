# include<iostream>
# include<cstring> // For memset()

using namespace std;

bool DP[100][100];  // [n+1][sum+1]
bool SubsetSum(int* arr,int sum,int n)
{
    // Initialization
    for(int i=0;i<n+1;i++) DP[i][0] = true;
    for(int j=1;j<sum+1;j++) DP[0][j] = false;

    // Choice Diagram
    for(int i=1;i<n+1;i++)
    {
        for(int j=1;j<sum+1;j++)
        {
            if(arr[i-1] <= sum) DP[i][j] = DP[i-1][j-arr[i-1]] || DP[i-1][j];
            else DP[i][j] = DP[i-1][j];
        }
    }

    return DP[n][sum];
}

int main()
{
    int n,sum;
    cin >> n >> sum;
    int* arr = new int[n];

    for(int i=0;i<n;i++) cin >> arr[i];

    memset(DP,0,sizeof(DP));
    cout << SubsetSum(arr,sum,n);
    
    delete []arr;
}
